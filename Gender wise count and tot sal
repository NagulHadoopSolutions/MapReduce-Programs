//shema : name,gender.salary
//Query : Find gender wise count and their total salary.
------------------------------------------------------------

import java.io.IOException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.lib.input.*;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.*;
public class SalSUm 
{
	public static class MyMapper extends Mapper<LongWritable,Text,Text,FloatWritable>
	{
		public void map(LongWritable key,Text value,Context con) throws IOException, InterruptedException
		{
			String arr[]=value.toString().split(",");
			
		con.write(new Text(arr[1]), new FloatWritable(Float.parseFloat(arr[2])));	//gender : salary
		}
		
	}
	public static class MyReducer extends Reducer<Text,FloatWritable,Text,Text>
	{
		public void reduce(Text key,Iterable<FloatWritable> value,Context con) throws IOException, InterruptedException
		{
			float sum=0.0f;
			int count=0;
		for(FloatWritable l:value)
		{
			count++;                        
			sum+=l.get();
		}
			
		String result="Count :"+count+" and total salary : "+sum;
		 	con.write(key,new Text(result));	
		}
	}
	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException
	{
		
		Configuration cfg=new Configuration();
		Job job=Job.getInstance(cfg,"Gender wise total salary");
		job.setJarByClass(SalSUm.class);
		job.setMapperClass(MyMapper.class);
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(FloatWritable.class);
		job.setReducerClass(MyReducer.class);
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(Text.class);
		FileInputFormat.addInputPath(job,new Path(args[0]));
		 FileSystem.get(cfg).delete(new Path(args[1]),true);
		FileOutputFormat.setOutputPath(job,new Path(args[1]));
		  System.exit(job.waitForCompletion(true) ? 0 : 1);
	}

}

